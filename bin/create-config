#!/usr/bin/env node
// Ghost Configuration for Cloud Foundry

var fs = require('fs');
var path = require('path');
var url = require('url');
var cfenv = require('cfenv');

var appRoot = path.join(__dirname, '..');
var appEnv = cfenv.getAppEnv();

function createConfig() {
    var fileStorage, storage;

    if (!!process.env.S3_ACCESS_KEY_ID) {
        fileStorage = true;
        storage = {
            active: 's3',
            's3': {
                accessKeyId: process.env.S3_ACCESS_KEY_ID,
                secretAccessKey: process.env.S3_SECRET_ACCESS_KEY,
                bucket: process.env.S3_BUCKET_NAME,
                region: process.env.S3_BUCKET_REGION,
                assetHost: process.env.S3_ASSET_HOST_URL
            }
        };
    } else {
        fileStorage = false;
        storage = {};
    }

    var mailCreds = appEnv.getServiceCreds('blog-mail');
    var dbCreds = appEnv.getServiceCreds('blog-db');

    config = {
        url: appEnv.url,
        mail: {
            transport: 'SMTP',
            options: {
                service: 'Sendgrid',
                auth: {
                    user: mailCreds.username,
                    pass: mailCreds.password
                }
            }
        },
        database: {
            client: 'mysql',
            connection: {
                host: dbCreds.hostname,
                port: dbCreds.port,
                user: dbCreds.username,
                password: dbCreds.password,
                database: dbCreds.name
            },
            pool: {
                min: 1,
                max: 2
            }
        },
        server: {
            host: appEnv.bind,
            port: appEnv.port
        },
        paths: {
            contentPath: path.join(appRoot, '/content/')
        },
        fileStorage: fileStorage,
        storage: storage,
        logging: {
            level: "info",
            transports: ["stdout"]
        }
    };

    return config;
}

var configContents = JSON.stringify(createConfig(), null, 2);
fs.writeFileSync(path.join(appRoot, 'config.production.json'), configContents);
